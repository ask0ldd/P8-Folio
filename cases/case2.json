{
    "id": 2,
    "title":"BOOKS RATING WEBSITE / BACKEND",
    "screenshot":"/cases/grimoire/grimoire1.webp",
    "bulletpoints": ["Mise en oeuvre d'<b>opérations CRUD</b> de manière sécurisée.", 
    "Implémenter un <b>modèle de données avec Mongoose</b> & définir ses validators.", 
    "<b>Stocker des fichiers</b> transmis par les utilisateurs via un formulaire dédié.",
    "Gestion de l'<b>authentification</b>. Sécurisation du mot de passe via <b>hashing</>."],
    "tags" : ["Node.js",
                "Express",
                "MongoDB"],
    "github" : "https://github.com/ask0ldd/P7-Node-Express-Mongo",
    "highlights" : [{
        "title" : "BOOK MODEL",
        "file" : "/cases/grimoire/code/codebookmodel.html",
        "description" : "Schema mongoose définissant la forme des documents composant la collection Book. Différents validators sont implémentés, notamment pour protéger la base de données contre les injections NoSQL usuelles. Un middleware, préalable à toute mise à jour de document, est défini pour que la validation ne soit pas uniquement effective lors des opérations de création.",
        "tags" : ["mongoose",
        "models",
        "validator",
        "virtuals",
        "mongodb",
        "regex"]
    },
    {
        "title" : "BOOK CONTROLLER",
        "file" : "/cases/grimoire/code/codebookcontroller.html",
        "description" : "Lorem ipsum dolor sit amet consectetur. Feugiat morbi id at venenatis aliquam congue cursus. Tellus nunc in ultricies risus hendrerit. Amet erat libero sit diam. Accumsan pellentesque diam cras semper diam enim sit. Ante malesuada a ut bibendum habitant lacus dictum quis turpis. Mattis et nascetur congue in et. Odio malesuada dolor at nunc amet odio.",
        "tags" : ["mongoose",
        "jsonwebtokens",
        "multer",
        "middlewares",
        "formdata/multipart",
        "fs.unlink"]
    },
    {
        "title" : "USER CONTROLLER",
        "file" : "/cases/grimoire/code/codeusercontroller.html",
        "description" : "Méthodes permettant l'inscription puis l'authentification d'un utilisateur. Pour assurer la sécurisation du mot de passe saisi à l'inscription, celui-ci est encrypté à l'aide de la méthode hash de la librairie bcrypt, avant d'être inséré en base de données. Ultérieurement, lors d'une tentative de connexion, bcrypt est cette fois capable de déterminer si un mot de passe saisi par un utilisateur correspond bien à un hash présent en bdd.",
        "tags" : ["mongoose",
        "jsonwebtokens",
        "hashing",
        "authentification",
        "middlewares",
        "bcrypt"]
    }],
    "banner" : "/cases/grimoire/case2bg.webp"
}